import telebot
from telebot import types

BOT_TOKEN = '7038256245:AAGVh50jRTsmhwNg-TcjW-2tvpPOI-jUQtw'  

bot = telebot.TeleBot(BOT_TOKEN)


def create_buttons(items):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for item in items:
        markup.add(types.KeyboardButton(item))
    return markup


def choose_lash_volume():
    return create_buttons([
        '2D',
        '3D',
        '4D',
        'Mega Volume' 
    ])


def choose_lash_effect():
    return create_buttons([
        '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π',
        '–ö—É–∫–æ–ª—å–Ω—ã–π',
        '–õ–∏—Å–∏–π',
        '–ë–µ–ª–∏—á–∏–π'
    ])


def choose_lash_color():
    return create_buttons([
        '–ß–µ—Ä–Ω—ã–µ',
        '–®–æ–∫–æ–ª–∞–¥',
        '–¶–≤–µ—Ç–Ω—ã–µ'
    ])


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–±—ä–µ–º, —ç—Ñ—Ñ–µ–∫—Ç, —Ü–≤–µ—Ç –¥–ª—è –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏—è —Ä–µ—Å–Ω–∏—Ü.ü•∞\n\n–ö–∞–∫–æ–π —Ü–≤–µ—Ç —Ä–µ—Å–Ω–∏—Ü —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?', reply_markup=choose_lash_color())


@bot.message_handler(func=lambda message: message.text in ['–ß–µ—Ä–Ω—ã–µ', '–®–æ–∫–æ–ª–∞–¥', '–¶–≤–µ—Ç–Ω—ã–µ'])
def handle_lash_color(message):
    if message.text in ['–ß–µ—Ä–Ω—ã–µ', '–®–æ–∫–æ–ª–∞–¥', '–¶–≤–µ—Ç–Ω—ã–µ']:
        bot.send_message(message.chat.id, f'–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, {message.text}! üëå\n\n–ö–∞–∫–æ–π –æ–±—ä–µ–º —Ä–µ—Å–Ω–∏—Ü —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?', reply_markup=choose_lash_volume())
    
        if message.text == '–ß–µ—Ä–Ω—ã–µ':
            bot.send_photo(message.chat.id, open('photo1718970246.jpeg', 'rb'))  
        elif message.text == '–®–æ–∫–æ–ª–∞–¥':
            bot.send_photo(message.chat.id, open('photo1718970239.jpeg', 'rb')) 
        elif message.text == '–¶–≤–µ—Ç–Ω—ã–µ':
            bot.send_photo(message.chat.id, open('photo1718970263.jpeg', 'rb')) 


@bot.message_handler(func=lambda message: message.text in ['2D', '3D', '4D', 'Mega Volume'])
def handle_lash_volume(message):
    if message.text in ['2D', '3D', '4D', 'Mega Volume']:
        bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ, {message.text}! üëå\n\n–ö–∞–∫–æ–π —ç—Ñ—Ñ–µ–∫—Ç —Ä–µ—Å–Ω–∏—Ü —Ç—ã —Ö–æ—á–µ—à—å?', reply_markup=choose_lash_effect())
        
        if message.text == '2D':
            bot.send_photo(message.chat.id, open('photo1718969673.jpeg', 'rb')) 
        elif message.text == '3D':
            bot.send_photo(message.chat.id, open('photo1718969673 (1).jpeg', 'rb')) 
        elif message.text == '4D':
            bot.send_photo(message.chat.id, open('photo1718969673 (3).jpeg', 'rb')) 
        elif message.text == 'Mega Volume':
            bot.send_photo(message.chat.id, open('photo1718969673 (4).jpeg', 'rb')) 


@bot.message_handler(func=lambda message: message.text in ['–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π', '–ö—É–∫–æ–ª—å–Ω—ã–π', '–õ–∏—Å–∏–π', '–ë–µ–ª–∏—á–∏–π'])
def handle_lash_effect(message):
    if message.text in ['–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π', '–ö—É–∫–æ–ª—å–Ω—ã–π', '–õ–∏—Å–∏–π', '–ë–µ–ª–∏—á–∏–π']:
        bot.send_message(message.chat.id, f'–°—É–ø–µ—Ä, {message.text}! üëå\n\n–Ø –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç!')
        
        if message.text == '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π':
            bot.send_photo(message.chat.id, open('msg928312113-373406.jpg', 'rb')) 
        elif message.text == '–ö—É–∫–æ–ª—å–Ω—ã–π':
            bot.send_photo(message.chat.id, open('photo1718969051.jpeg', 'rb')) 
        elif message.text == '–õ–∏—Å–∏–π':
            bot.send_photo(message.chat.id, open('photo1718969049.jpeg', 'rb')) 
        elif message.text == '–ë–µ–ª–∏—á–∏–π':
            bot.send_photo(message.chat.id, open('photo1718969054.jpeg', 'rb')) 

bot.polling()
